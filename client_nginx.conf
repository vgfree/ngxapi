
user  root root;
worker_processes  8;
worker_rlimit_nofile 655350;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
	use epoll;
	multi_accept on;
	worker_connections 65535;
}


http {
	# set search paths for pure Lua external libraries (';;' is the default path):
	lua_package_path '/usr/share/lua/5.4/?.lua;/opt/ownstor/ownstor-api/?.lua;/opt/ownstor/ownstor-api/open/ngxstep/?.lua;/opt/ownstor/ownstor-api/open/ngxonly/?.lua;/opt/ownstor/ownstor-api/open/lib/?.lua;/opt/ownstor/ownstor-api/open/linkup/?.lua;/opt/ownstor/ownstor-api/open/public/?.lua;;';
	# set search paths for Lua external libraries written in C (can also use ';;'):
	lua_package_cpath '/opt/ownstor/ownstor-api/open/lib/?.so;;';

	include       mime.types;
	default_type  application/octet-stream;

	log_format main '[$time_local] $remote_addr - $remote_user "$request" '
		'$status $body_bytes_sent "$http_referer" '
		#'"$http_user_agent" "$http_x_forwarded_for" "$request_time"';
		'"$http_user_agent" "$http_x_forwarded_for" "$gzip_ratio" - "$request_time"';

	access_log  logs/access.log;

	sendfile        on;
	#tcp_nopush     on;

	#keepalive_timeout  0;

	#gzip  on;
	client_max_body_size 10000M;


	upstream manage_center {
		server 103.143.10.51:8090;
	}

	lua_shared_dict storehouse 10m;
	lua_shared_dict cache 10m;
	# init_by_lua_file	"/opt/ownstor/ownstor-api/open/ngxstep/ngx_init.lua";
	init_worker_by_lua_file "/opt/ownstor/ownstor-api/open/ngxstep/ngx_init.lua";
	server {
		listen       8090;
		server_name  localhost;

		#charset koi8-r;

		lua_code_cache on;
		set $LOG_FILE_PATH	/usr/local/openresty/nginx/logs/;
		set $manage_center "103.143.10.51:8090";

		location / {
			root   html;
			index  index.html index.htm;

			if ($request_method = OPTIONS) {  
				add_header 'Access-Control-Allow-Origin' '*';  
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';  
				add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-nas-clienttype';
				add_header 'Access-Control-Max-Age' 1728000;  
				return 200;  
			}

			add_header 'Access-Control-Allow-Origin' '*';
			add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-nas-clienttype';
		}

		#API LIST
		include /opt/ownstor/ownstor-api/account_manager/deploy/ngxapi.conf;
		include /opt/ownstor/ownstor-api/storage_manager/deploy/ngxapi.conf;
		include /opt/ownstor/ownstor-api/fsystem_manager/deploy/ngxapi.conf;

		location /login {
			if ($request_method = OPTIONS) {  
				add_header 'Access-Control-Allow-Origin' '*';  
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';  
				add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-nas-clienttype';
				add_header 'Access-Control-Max-Age' 1728000;  
				return 200;  
			}

			add_header 'Access-Control-Allow-Origin' '*';
			add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-nas-clienttype';
			content_by_lua_file './lua/login.lua';
		}

		location /register {
			if ($request_method = OPTIONS) {  
				add_header 'Access-Control-Allow-Origin' '*';  
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';  
				add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-nas-clienttype';
				add_header 'Access-Control-Max-Age' 1728000;  
				return 200;  
			}

			add_header 'Access-Control-Allow-Origin' '*';
			add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-nas-clienttype';
			content_by_lua_file './lua/register.lua';
		}

		location /status.php {
			content_by_lua 'ngx.say([[{"installed":true,"maintenance":false,"version":"27.1.4.1","versionstring":"27.1.4"}]])';
		}

		location /index.php {
			content_by_lua 'ngx.say("{}")';
		}

		location /cloudnas/pcClient/login {
			content_by_lua_file './lua/app_login.lua';
		}

		location ~ (/ocs|/remote.php) {
			proxy_pass http://127.0.0.1:7900;
		}

		#error_page  404              /404.html;

		# redirect server error pages to the static page /50x.html
		#
		error_page   500 502 503 504  /50x.html;
		location = /50x.html {
			root   html;
		}

		# proxy the PHP scripts to Apache listening on 127.0.0.1:80
		#
		#location ~ \.php$ {
		#    proxy_pass   http://127.0.0.1;
		#}

		# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
		#
		#location ~ \.php$ {
		#    root           html;
		#    fastcgi_pass   127.0.0.1:9000;
		#    fastcgi_index  index.php;
		#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
		#    include        fastcgi_params;
		#}

		# deny access to .htaccess files, if Apache's document root
		# concurs with nginx's one
		#
		#location ~ /\.ht {
		#    deny  all;
		#}
	}


	# another virtual host using mix of IP-, name-, and port-based configuration
	#
	#server {
	#    listen       8000;
	#    listen       somename:8080;
	#    server_name  somename  alias  another.alias;

	#    location / {
	#        root   html;
	#        index  index.html index.htm;
	#    }
	#}


	# HTTPS server
	#
	#server {
	#    listen       443 ssl;
	#    server_name  localhost;

	#    ssl_certificate      cert.pem;
	#    ssl_certificate_key  cert.key;

	#    ssl_session_cache    shared:SSL:1m;
	#    ssl_session_timeout  5m;

	#    ssl_ciphers  HIGH:!aNULL:!MD5;
	#    ssl_prefer_server_ciphers  on;

	#    location / {
	#        root   html;
	#        index  index.html index.htm;
	#    }
	#}

	#    server {
	#	    listen 443 ssl;
	#	    server_name nascenter.kaixiangtech.com  #需要访问的域名，这里也不用加https;
	##root /opt/frontend/frontend;
	##index index.html;
	#	    client_max_body_size 1000M;
	#	    ssl on;
	#
	#	    ssl_certificate /opt/ssl/cert.pem; #这里是ssl key文件存放的绝对路径，根据自己的文件名称和路径来写
	#		    ssl_certificate_key /opt/ssl/cert.key; #这里是ssl key文件存放的绝对路径，根据自己的文件名称和路径来写
	#
	#		    ssl_session_cache shared:SSL:1m;
	#	    ssl_session_timeout 5m;
	#
	#	    ssl_ciphers HIGH:!aNULL:!MD5;
	#	    ssl_prefer_server_ciphers on;
	##add_header 'Access-Control-Allow-Origin' '*';
	##add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
	##add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-nas-clienttype';
	#
	#	    location / {
	#		    proxy_pass http://127.0.0.1:8803;
	#	    }
	#    }
}
